apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  namespace: "namespace3"
  labels:
    name: deployment-consumer
spec:
  selector:
    matchLabels:
      app: deployment-consumer
  replicas: 2
  template:
    metadata:
      labels:
        app: deployment-consumer
    spec:
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ .name }}
        {{- end }}
      initContainers:
        - name: wait-for-postgresql
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - |
              until nc -z cve-webapp-processor-pgpool.namespace3.svc.cluster.local 5432; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 5
              done
        {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: {{ .imagePullPolicy }}
          env:
            {{- range .env }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
            {{- end }}
        {{- end }}
      containers:
        {{- range .Values.containers }}
        - name: {{ .name }}
          image: {{ .image }}
          env:
            {{- range .env }}
            - name: {{ .name }}
              value: {{ .value | default "" }}
              {{- if .valueFrom }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
              {{- end }}
            {{- end }}
          readinessProbe:
            exec:
              command:
                {{- toYaml .readinessProbe.exec.command | nindent 14 }}
            initialDelaySeconds: {{ .readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .readinessProbe.timeoutSeconds }}
            successThreshold: {{ .readinessProbe.successThreshold }}
            failureThreshold: {{ .readinessProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              port: {{ .livenessProbe.httpGet.port }}
              path: {{ .livenessProbe.httpGet.path }}
            initialDelaySeconds: {{ .livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .livenessProbe.timeoutSeconds }}
            successThreshold: {{ .livenessProbe.successThreshold }}
            failureThreshold: {{ .livenessProbe.failureThreshold }}
        {{- end }}
